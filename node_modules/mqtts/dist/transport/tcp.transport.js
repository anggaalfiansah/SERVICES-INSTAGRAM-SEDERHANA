"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.TcpTransport = void 0;
const transport_1 = require("./transport");
const net_1 = require("net");
const errors_1 = require("../errors");
class TcpTransport extends transport_1.Transport {
    constructor(options) {
        super(options);
        this.reset();
    }
    reset() {
        if (this.duplex && !this.duplex.destroyed)
            this.duplex.destroy();
        this.duplex = undefined;
    }
    connect() {
        if (this.duplex)
            throw new errors_1.IllegalStateError('TcpSocket still connected');
        return new Promise(resolve => (this.duplex = net_1.connect(this.options.port, this.options.host, () => {
            resolve();
        })));
    }
}
exports.TcpTransport = TcpTransport;
//# sourceMappingURL=tcp.transport.js.map