/// <reference types="node" />
export declare class PacketStream {
    set position(value: number);
    get position(): number;
    get data(): Buffer;
    get length(): number;
    get remainingBytes(): number;
    private _data;
    private _position;
    private constructor();
    static fromLength(len: number): PacketStream;
    static fromBuffer(buf: Buffer): PacketStream;
    static fromString(data: string): PacketStream;
    static empty(): PacketStream;
    static fromHex(hex: string): PacketStream;
    /**
     *
     * @param {number} steps - steps to move
     * @returns {number} Position before moving
     */
    private move;
    seek(len: number): this;
    cut(): this;
    write(data: Buffer, move?: boolean): this;
    writeRawString(data: string): this;
    writeByte(num: number): this;
    writeWord(num: number): this;
    writeString(str: string): this;
    writeRawAndLength(data: Buffer): this;
    writeVariableByteInteger(value: number): this;
    read(len: number): Buffer;
    readSlice(end: number): Buffer;
    readByte(): number;
    readWord(): number;
    readString(): string;
    readStringAsBuffer(): Buffer;
    readVariableByteInteger(): number;
}
