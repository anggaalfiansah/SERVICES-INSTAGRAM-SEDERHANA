"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.DefaultPacketReadMap = void 0;
const mqtt_constants_1 = require("../mqtt.constants");
const connect_response_packet_1 = require("./connect.response.packet");
const publish_request_packet_1 = require("./publish.request.packet");
const publish_ack_packet_1 = require("./publish.ack.packet");
const publish_release_packet_1 = require("./publish.release.packet");
const publish_received_packet_1 = require("./publish.received.packet");
const publish_complete_packet_1 = require("./publish.complete.packet");
const subscribe_response_packet_1 = require("./subscribe.response.packet");
const unsubscribe_response_packet_1 = require("./unsubscribe.response.packet");
const ping_response_packet_1 = require("./ping.response.packet");
const ping_request_packet_1 = require("./ping.request.packet");
exports.DefaultPacketReadMap = {
    [mqtt_constants_1.PacketType.ConnAck]: connect_response_packet_1.readConnectResponsePacket,
    [mqtt_constants_1.PacketType.Publish]: publish_request_packet_1.readPublishRequestPacket,
    [mqtt_constants_1.PacketType.PubAck]: publish_ack_packet_1.readPublishAckPacket,
    [mqtt_constants_1.PacketType.PubRel]: publish_release_packet_1.readPublishReleasePacket,
    [mqtt_constants_1.PacketType.PubRec]: publish_received_packet_1.readPublishReceivedPacket,
    [mqtt_constants_1.PacketType.PubComp]: publish_complete_packet_1.readPublishCompletePacket,
    [mqtt_constants_1.PacketType.SubAck]: subscribe_response_packet_1.readSubscribeResponsePacket,
    [mqtt_constants_1.PacketType.UnsubAck]: unsubscribe_response_packet_1.readUnsubscribePacket,
    [mqtt_constants_1.PacketType.PingReq]: ping_request_packet_1.readPingRequestPacket,
    [mqtt_constants_1.PacketType.PingResp]: ping_response_packet_1.readPingResponsePacket,
};
//# sourceMappingURL=packet-reader.js.map