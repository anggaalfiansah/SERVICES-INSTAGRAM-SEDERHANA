/// <reference types="node" />
import { PacketStream } from '../packet-stream';
import { IdentifierPacket, PacketWriteResult } from '../mqtt.packet';
export declare class PublishRequestPacket extends IdentifierPacket {
    flags: number;
    topic: string;
    payload: Buffer;
    get duplicate(): boolean;
    get qos(): 0 | 1 | 2;
    get retain(): boolean;
    constructor(flags: number, topic: string, identifier: number | undefined, payload: Buffer);
}
export interface PublishPacketOptions {
    topic: string;
    qos?: number;
    duplicate?: boolean;
    retain?: boolean;
    payload?: string | Buffer;
    identifier?: number;
}
export declare function writePublishRequestPacket(stream: PacketStream, options: PublishPacketOptions): PacketWriteResult;
export declare function readPublishRequestPacket(stream: PacketStream, remainingLength: number, flags: number): PublishRequestPacket;
